{"version":3,"file":"_id_-mjziCHNz.js","sources":["../../../../pages/customers/edit/[id].vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport { storage } from \"@/utils/appwrite\";\r\nimport { useMutation, useQuery } from \"@tanstack/vue-query\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { COLLECTION_CUSTOMERS, DB_ID, STORAGE_ID } from \"~/app.constants\";\r\nimport type { ICustomer } from \"~/types/deals.types\";\r\n\r\ninterface InputFileEvent extends Event {\r\n  target: HTMLInputElement;\r\n}\r\n\r\ninterface ICustomerFormState\r\n  extends Pick<ICustomer, \"avatar_url\" | \"email\" | \"name\" | \"from_source\"> {}\r\n\r\nuseSeoMeta({\r\n  title: \"Редактирование компании | CRM System\",\r\n});\r\n\r\nconst route = useRoute();\r\nconst customerId = route.params.id as string;\r\n\r\nconst { handleSubmit, defineField, setFieldValue, setValues, values } =\r\n  useForm<ICustomerFormState>({});\r\n\r\nconst { data, isSuccess } = useQuery({\r\n  queryKey: [\"get customer\", customerId],\r\n  queryFn: () => DB.getDocument(DB_ID, COLLECTION_CUSTOMERS, customerId),\r\n});\r\n\r\nconst setInitialValues = (customerData: ICustomerFormState) => {\r\n  setValues({\r\n    email: customerData.email,\r\n    avatar_url: customerData.avatar_url,\r\n    from_source: customerData.from_source || \"\",\r\n    name: customerData.name,\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  watchEffect(() => {\r\n    if (isSuccess.value) {\r\n      setInitialValues(data.value as unknown as ICustomerFormState);\r\n    }\r\n  });\r\n});\r\n\r\nwatch(\r\n  () => data.value?.avatar_url,\r\n  (newAvatarUrl) => {\r\n    if (newAvatarUrl) {\r\n      setFieldValue(\"avatar_url\", newAvatarUrl);\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\nconst [name, nameAttrs] = defineField(\"name\");\r\nconst [email, emailAttrs] = defineField(\"email\");\r\nconst [fromSource, fromSourceAttrs] = defineField(\"from_source\");\r\n\r\nconst { mutate, isPending } = useMutation({\r\n  mutationKey: [\"update customer\", customerId],\r\n  mutationFn: (data: ICustomerFormState) =>\r\n    DB.updateDocument(DB_ID, COLLECTION_CUSTOMERS, customerId, data),\r\n});\r\n\r\nconst { mutate: uploadImage, isPending: isUploadImagePending } = useMutation({\r\n  mutationKey: [\"upload image\"],\r\n  mutationFn: (file: File) => storage.createFile(STORAGE_ID, uuid(), file),\r\n  onSuccess(data) {\r\n    const response = storage.getFileDownload(STORAGE_ID, data.$id);\r\n    setFieldValue(\"avatar_url\", response.href);\r\n  },\r\n});\r\n\r\nconst onSubmit = handleSubmit((values) => {\r\n  mutate(values);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div class=\"p-10\">\r\n    <h1 class=\"font-bold text-2xl mb-10\">\r\n      Редактирование компании\r\n      {{ (data as unknown as ICustomerFormState)?.name }}\r\n    </h1>\r\n\r\n    <form @submit=\"onSubmit\" class=\"form\">\r\n      <UiInput\r\n        placeholder=\"Название компании\"\r\n        v-model=\"name\"\r\n        v-bind=\"nameAttrs\"\r\n        type=\"text\"\r\n        class=\"input\"\r\n      />\r\n      <UiInput\r\n        placeholder=\"Почта\"\r\n        v-model=\"email\"\r\n        v-bind=\"emailAttrs\"\r\n        type=\"text\"\r\n        class=\"input\"\r\n      />\r\n      <UiInput\r\n        placeholder=\"Откуда пришла\"\r\n        v-model=\"fromSource\"\r\n        v-bind=\"fromSourceAttrs\"\r\n        type=\"text\"\r\n        class=\"input\"\r\n      />\r\n      <img\r\n        v-if=\"values.avatar_url || isUploadImagePending\"\r\n        :src=\"values.avatar_url\"\r\n        alt=\"\"\r\n        width=\"50\"\r\n        height=\"50\"\r\n        class=\"rounded-full my-4\"\r\n      />\r\n      <div class=\"grid w-full max-w-sm items-center gap-1.5 input\">\r\n        <label>\r\n          <div class=\"text-sm mb-6\">Логотип</div>\r\n          <UiInput\r\n            type=\"file\"\r\n            :onchange=\"(e:InputFileEvent) => e?.target?.files?.length && uploadImage(e.target.files[0])\"\r\n            :disabled=\"isUploadImagePending\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <UiButton :disabled=\"isPending\" variant=\"secondary\" class=\"mt-2\">\r\n        {{ isPending ? \"Загрузка...\" : \"Сохранить\" }}\r\n      </UiButton>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.input {\r\n  @apply border-[#252616] mb-6 placeholder:text-[#748092] focus:border-border transition-colors;\r\n}\r\n</style>\r\n"],"names":["data","uuid","values"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcW,eAAA;AAAA,MACT,OAAO;AAAA,IAAA,CACR;AAED,UAAM,QAAQ;AACR,UAAA,aAAa,MAAM,OAAO;AAE1B,UAAA,EAAE,cAAc,aAAa,eAAe,WAAW,OAAO,IAClE,QAA4B,CAAA,CAAE;AAEhC,UAAM,EAAE,MAAM,UAAU,IAAI,SAAS;AAAA,MACnC,UAAU,CAAC,gBAAgB,UAAU;AAAA,MACrC,SAAS,MAAM,GAAG,YAAY,OAAO,sBAAsB,UAAU;AAAA,IAAA,CACtE;AAmBD;AAAA,MACE,MAAM;;AAAA,0BAAK,UAAL,mBAAY;AAAA;AAAA,MAClB,CAAC,iBAAiB;AAChB,YAAI,cAAc;AAChB,wBAAc,cAAc,YAAY;AAAA,QAC1C;AAAA,MACF;AAAA,MACA,EAAE,WAAW,KAAK;AAAA,IAAA;AAGpB,UAAM,CAAC,MAAM,SAAS,IAAI,YAAY,MAAM;AAC5C,UAAM,CAAC,OAAO,UAAU,IAAI,YAAY,OAAO;AAC/C,UAAM,CAAC,YAAY,eAAe,IAAI,YAAY,aAAa;AAE/D,UAAM,EAAE,QAAQ,UAAU,IAAI,YAAY;AAAA,MACxC,aAAa,CAAC,mBAAmB,UAAU;AAAA,MAC3C,YAAY,CAACA,UACX,GAAG,eAAe,OAAO,sBAAsB,YAAYA,KAAI;AAAA,IAAA,CAClE;AAED,UAAM,EAAE,QAAQ,aAAa,WAAW,qBAAA,IAAyB,YAAY;AAAA,MAC3E,aAAa,CAAC,cAAc;AAAA,MAC5B,YAAY,CAAC,SAAe,QAAQ,WAAW,YAAYC,MAAQ,IAAI;AAAA,MACvE,UAAUD,OAAM;AACd,cAAM,WAAW,QAAQ,gBAAgB,YAAYA,MAAK,GAAG;AAC/C,sBAAA,cAAc,SAAS,IAAI;AAAA,MAC3C;AAAA,IAAA,CACD;AAEgB,iBAAa,CAACE,YAAW;AACxC,aAAOA,OAAM;AAAA,IAAA,CACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}