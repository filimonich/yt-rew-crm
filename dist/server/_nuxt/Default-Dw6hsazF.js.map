{"version":3,"file":"Default-Dw6hsazF.js","sources":["../../../../components/layout/Loader.vue","../../../../components/layout/menu.data.ts","../../../../components/layout/Sidebar.vue","../../../../layouts/Default.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <NuxtImg src=\"/loader.svg\" alt=\"loader\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.wrapper {\r\n  @apply bg-sidebar flex items-center justify-center w-screen h-screen;\r\n}\r\n</style>\r\n","export interface IMenuItem {\r\n  name: string;\r\n  url: string;\r\n  icon: string;\r\n}\r\n\r\nexport const MENU_DATA: IMenuItem[] = [\r\n  {\r\n    icon: \"radix-icons:dashboard\",\r\n    name: \"Home\",\r\n    url: \"/\",\r\n  },\r\n  {\r\n    name: \"Products\",\r\n    icon: \"ep:goods\",\r\n    url: \"/products\",\r\n  },\r\n  {\r\n    name: \"Payments\",\r\n    icon: \"ph:contactless-payment\",\r\n    url: \"/payments\",\r\n  },\r\n  {\r\n    name: \"Orders\",\r\n    icon: \"fluent:receipt-28-regular\",\r\n    url: \"/orders\",\r\n  },\r\n  {\r\n    name: \"Customers\",\r\n    icon: \"mingcute:group-line\",\r\n    url: \"/customers\",\r\n  },\r\n  {\r\n    name: \"Feedback\",\r\n    icon: \"fluent:person-feedback-48-regular\",\r\n    url: \"/feedback\",\r\n  },\r\n  {\r\n    name: \"Settings\",\r\n    icon: \"radix-icons:gear\",\r\n    url: \"/settings\",\r\n  },\r\n  {\r\n    name: \"Help center\",\r\n    icon: \"radix-icons:question-mark\",\r\n    url: \"/help\",\r\n  },\r\n];\r\n","<script lang=\"ts\" setup>\r\nimport { useAuthStore, useIsLoadingStore } from \"~/store/auth.store\";\r\n\r\nconst isLoadingStore = useIsLoadingStore();\r\nconst store = useAuthStore();\r\nconst router = useRouter();\r\nconst logout = async () => {\r\n  isLoadingStore.set(true);\r\n  await account.deleteSession(\"current\");\r\n  store.clear();\r\n  await router.push(\"/login\");\r\n  isLoadingStore.set(false);\r\n};\r\n</script>\r\n\r\n<template>\r\n  <aside class=\"px-5 py-8 bg-sidebar h-full relative w-full\">\r\n    <NuxtLink to=\"/\" class=\"mb-10 block\">\r\n      <NuxtImg src=\"/logo.svg\" alt=\"logo\" width=\"140px\" class=\"mx-auto\" />\r\n    </NuxtLink>\r\n    <button\r\n      class=\"absolute top-2 right-3 transition-colors hover:text-primary\"\r\n      @click=\"logout\"\r\n    >\r\n      <Icon name=\"line-md:log-out\" size=\"20\" />\r\n    </button>\r\n    <LayoutMenu />\r\n    <div></div>\r\n  </aside>\r\n</template>\r\n","<script lang=\"ts\" setup>\r\nimport { account } from \"@/utils/appwrite\";\r\nimport { useAuthStore, useIsLoadingStore } from \"~/store/auth.store\";\r\n\r\nconst isLoadingStore = useIsLoadingStore();\r\nconst store = useAuthStore();\r\nconst router = useRouter();\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const user = await account.get();\r\n    if (user) store.set(user);\r\n  } catch (e) {\r\n    router.push(\"/login\");\r\n  } finally {\r\n    isLoadingStore.set(false);\r\n  }\r\n});\r\n</script>\r\n\r\n<template>\r\n  <LayoutLoader v-if=\"isLoadingStore.isLoading\" />\r\n  <section v-else :class=\"{ grid: store.isAuth }\" style=\"min-height: 100vh\">\r\n    <LayoutSidebar v-if=\"store.isAuth\" />\r\n    <div>\r\n      <slot />\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 6fr;\r\n}\r\n</style>\r\n"],"names":["_ssrRenderAttrs","_mergeProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAA,OAAAA,eAAAC,WAAA,EAAA,OAAA,aAAA,MAAA,CAAA,CAAA,mBAAA;AAEa,2BAAiB,oBAAA;AAAA,IAAC,KAAI;AAAA;EAFnC,GAAA,MAAA,OAAA,CAAA;;;;;;;;;;ACMO,MAAM,YAAyB;AAAA,EACpC;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACP;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CuB,sBAAkB;AAC3B,iBAAa;AACZ,cAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDzB,UAAM,iBAAiB;AACvB,UAAM,QAAQ;AACC,cAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}